// Copyright 2016 Proyectos y Sistemas de Mantenimiento SL (eProsima).
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/*!
 * @file ImgMsgPublisher.h
 * This header file contains the declaration of the publisher functions.
 *
 * This file was generated by the tool fastcdrgen.
 */


#ifndef _IMGMSG_PUBLISHER_H_
#define _IMGMSG_PUBLISHER_H_

#include <fastrtps/fastrtps_fwd.h>
#include <fastrtps/publisher/PublisherListener.h>
#include <opencv2/core/mat.hpp>

#include "ImgMsgPubSubTypes.h"

class ImgMsgPublisher
{
public:
	ImgMsgPublisher();
	virtual ~ImgMsgPublisher();
	bool init(        const std::string &wan_ip,
                      unsigned short port,
                      bool use_tls,
                      const std::vector<std::string>& whitelist);
    bool publish(bool waitForListener = true);
	void run(uint32_t number, uint32_t sleep, std::string datasize);
private:
    ImgMsg m_imgMsg; // TODO...
	eprosima::fastrtps::Participant *mp_participant;
	eprosima::fastrtps::Publisher *mp_publisher;
    bool stop;

	class PubListener : public eprosima::fastrtps::PublisherListener
	{
	public:
		PubListener() : n_matched(0){};
		~PubListener(){};
		void onPublicationMatched(eprosima::fastrtps::Publisher* pub,eprosima::fastrtps::rtps::MatchingInfo& info);
		int n_matched;
	} m_listener;
	ImgMsgPubSubType myType;

	void runThread(uint32_t number, uint32_t sleep, std::string datasize);
};

#endif // _IMGMSG_PUBLISHER_H_